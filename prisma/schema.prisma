// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Board {
  id String @id @default(uuid()) @map("_id")
  title String 
  orgId String
  imageId String
  imageThumbUrl String @db.String
  imageFullUrl String @db.String
  imageUserName String @db.String
  imageHtmlLink String @db.String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  lists List[] 
}

model List{
  id String @id @default(uuid()) @map("_id")
  title String
  order Int
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  boardId String
  board Board @relation(fields: [boardId],references: [id],onDelete:Cascade)

  cards Card[]
  
  @@index([boardId])
}

model Card{
  id String @id @default(uuid()) @map("_id")
  title String
  description String?
  order Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  listId String
  list List @relation(fields: [listId],references: [id],onDelete:Cascade)

  @@index([listId])
}

enum ACTION {
    CREATE
    UPDATE
    DELETE
}

enum ENTITY_TYPE {
    BOARD
    LIST
    CARD
}

model AuditLog{
  id String @id @default(uuid()) @map("_id")
  orgId String
  action ACTION
  entityId String
  entityType ENTITY_TYPE
  entityTitle String

  userId String
  userName String
  userImage String @db.String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrgLimit{
  id String @id @default(uuid()) @map("_id")
  orgId String @unique
  limit Int @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}